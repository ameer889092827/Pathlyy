"use client";

import React, {
  createContext,
  useContext,
  useEffect,
  useMemo,
  useState,
} from "react";

type SupportedLanguage = "en" | "ru";

type TranslationDict = Record<string, { en: string; ru: string }>;

const translations: TranslationDict = {
  // Navbar
  "nav.home": { en: "Home", ru: "–ì–ª–∞–≤–Ω–∞—è" },
  "nav.majors": { en: "Majors", ru: "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" },
  "nav.assessment": { en: "Assessment", ru: "–¢–µ—Å—Ç" },
  "nav.progress": { en: "Progress", ru: "–ü—Ä–æ–≥—Ä–µ—Å—Å" },
  "nav.welcome": { en: "Welcome", ru: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" },

  // Hero
  "hero.title": {
    en: "Discover Your Perfect College Major",
    ru: "–ù–∞–π–¥–∏—Ç–µ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
  },
  "hero.subtitle": {
    en: "Take a personalized assessment and get step-by-step guidance toward your dream career.",
    ru: "–ü—Ä–æ–π–¥–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫ –≤–∞—à–µ–π –∫–∞—Ä—å–µ—Ä–µ.",
  },
  "hero.startAssessment": { en: "Start Assessment", ru: "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" },
  "hero.browseMajors": { en: "Browse Majors", ru: "–°–º–æ—Ç—Ä–µ—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" },
  "hero.whyChooseUs": { en: "Why choose Pathly?", ru: "–ü–æ—á–µ–º—É Pathly?" },
  "hero.whyChooseUsSubtitle": {
    en: "The easiest way to explore majors and plan your journey.",
    ru: "–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∏–∑—É—á–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É—Ç—å.",
  },
  "hero.readyToStart": { en: "Ready to start?", ru: "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?" },
  "hero.readyToStartSubtitle": {
    en: "Join thousands of students exploring their future.",
    ru: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∏–∑—É—á–∞—é—â–∏–º —Å–≤–æ—ë –±—É–¥—É—â–µ–µ.",
  },
  "hero.getStarted": { en: "Get Started", ru: "–ù–∞—á–∞—Ç—å" },

  // Majors page
  "majors.title": {
    en: "Explore College Majors",
    ru: "–ò–∑—É—á–∞–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏",
  },
  "majors.subtitle": {
    en: "Discover detailed information about college majors, career outcomes, and academic roadmaps.",
    ru: "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è—Ö, –∫–∞—Ä—å–µ—Ä–µ –∏ —É—á–µ–±–Ω—ã—Ö –¥–æ—Ä–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç–∞—Ö.",
  },
  "majors.searchPlaceholder": {
    en: "Search majors...",
    ru: "–ü–æ–∏—Å–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π...",
  },
  "majors.viewRoadmap": { en: "View Roadmap", ru: "–°–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Ä–æ–∂–Ω—É—é –∫–∞—Ä—Ç—É" },
  "majors.noResults": {
    en: "No majors found matching your search.",
    ru: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.",
  },

  // Roadmap page
  "roadmap.back": { en: "Back to Majors", ru: "–ù–∞–∑–∞–¥ –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º" },
  "roadmap.requirements": { en: "Recommended Steps", ru: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —à–∞–≥–∏" },
  "roadmap.communities": { en: "Communities", ru: "–°–æ–æ–±—â–µ—Å—Ç–≤–∞" },
  "roadmap.courses": { en: "Recommended Courses", ru: "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫—É—Ä—Å—ã" },
  "roadmap.resources": { en: "Resources", ru: "–†–µ—Å—É—Ä—Å—ã" },

  // Progress page
  "progress.title": { en: "Your Progress", ru: "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å" },
  "progress.subtitle": {
    en: "Track your career exploration journey",
    ru: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –≤–∞—à –ø—É—Ç—å –∏–∑—É—á–µ–Ω–∏—è –∫–∞—Ä—å–µ—Ä—ã",
  },
  "progress.achievements": { en: "Achievements", ru: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è" },
  "progress.recentActivity": {
    en: "Recent Activity",
    ru: "–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
  },
  "progress.overview": { en: "Overview", ru: "–û–±–∑–æ—Ä" },
  "progress.goals": { en: "Goals", ru: "–¶–µ–ª–∏" },
  "progress.analytics": { en: "Analytics", ru: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" },
  "progress.activity": { en: "Activity", ru: "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" },
  "progress.dailyChallenge": { en: "Daily Challenge", ru: "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—ã–∑–æ–≤" },
  "progress.completeChallenge": {
    en: "Complete Challenge",
    ru: "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–∑–æ–≤",
  },
  "progress.challengeCompleted": {
    en: "Challenge completed! +{points} points earned",
    ru: "–í—ã–∑–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω! +{points} –æ—á–∫–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ",
  },
  "progress.explorationProgress": {
    en: "Exploration Progress",
    ru: "–ü—Ä–æ–≥—Ä–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
  },
  "progress.complete": { en: "Complete", ru: "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" },
  "progress.majorsExplored": {
    en: "Majors Explored",
    ru: "–ò–∑—É—á–µ–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π",
  },
  "progress.topExplorer": {
    en: "üåü Top Explorer!",
    ru: "üåü –ì–ª–∞–≤–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å!",
  },
  "progress.gettingThere": { en: "üöÄ Getting there!", ru: "üöÄ –£–∂–µ –ø–æ—á—Ç–∏!" },
  "progress.justStarting": {
    en: "‚ú® Just starting!",
    ru: "‚ú® –¢–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ–º!",
  },
  "progress.roadmapsViewed": {
    en: "Roadmaps Viewed",
    ru: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –¥–æ—Ä–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç",
  },
  "progress.roadmapMaster": {
    en: "üéØ Roadmap Master!",
    ru: "üéØ –ú–∞—Å—Ç–µ—Ä –¥–æ—Ä–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç!",
  },
  "progress.goodPlanning": {
    en: "üìã Good planning!",
    ru: "üìã –•–æ—Ä–æ—à–µ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!",
  },
  "progress.startExploring": {
    en: "üîç Start exploring!",
    ru: "üîç –ù–∞—á–Ω–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å!",
  },
  "progress.assessmentsTaken": {
    en: "Assessments Taken",
    ru: "–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤",
  },
  "progress.selfAware": { en: "üß† Self-aware!", ru: "üß† –°–∞–º–æ—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π!" },
  "progress.takeFirstStep": {
    en: "üí≠ Take your first step!",
    ru: "üí≠ –°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —à–∞–≥!",
  },
  "progress.learningStreak": { en: "Learning Streak", ru: "–°–µ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è" },
  "progress.currentStreak": { en: "Current Streak", ru: "–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è" },
  "progress.keepItUp": { en: "üî• Keep it up!", ru: "üî• –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!" },
  "progress.startYourStreak": {
    en: "Start your streak today!",
    ru: "–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ—é —Å–µ—Ä–∏—é —Å–µ–≥–æ–¥–Ω—è!",
  },
  "progress.longestStreak": { en: "Longest Streak", ru: "–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Å–µ—Ä–∏—è" },
  "progress.personalBest": { en: "Personal best", ru: "–õ–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥" },
  "progress.weeklyGoal": {
    en: "Weekly Goal: {current}/{total} days",
    ru: "–ù–µ–¥–µ–ª—å–Ω–∞—è —Ü–µ–ª—å: {current}/{total} –¥–Ω–µ–π",
  },
  "progress.sevenDayStreakBonus": {
    en: "7-Day Streak Bonus",
    ru: "–ë–æ–Ω—É—Å –∑–∞ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
  },
  "progress.fourteenDayStreakBonus": {
    en: "14-Day Streak Bonus",
    ru: "–ë–æ–Ω—É—Å –∑–∞ 14 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
  },
  "progress.thirtyDayStreakBonus": {
    en: "30-Day Streak Bonus",
    ru: "–ë–æ–Ω—É—Å –∑–∞ 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
  },
  "progress.quickStats": { en: "Quick Stats", ru: "–ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" },
  "progress.totalPoints": { en: "Total Points", ru: "–í—Å–µ–≥–æ –æ—á–∫–æ–≤" },
  "progress.totalDaysActive": {
    en: "Total Days Active",
    ru: "–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π",
  },
  "progress.progressVsAverage": {
    en: "Your Progress vs. Average",
    ru: "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ—Ç–∏–≤ —Å—Ä–µ–¥–Ω–µ–≥–æ",
  },
  "progress.exploration": { en: "Exploration", ru: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ" },
  "progress.learning": { en: "Learning", ru: "–û–±—É—á–µ–Ω–∏–µ" },
  "progress.assessment": { en: "Assessment", ru: "–û—Ü–µ–Ω–∫–∞" },
  "progress.continueJourney": {
    en: "Continue Your Journey",
    ru: "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–≤–æ–π –ø—É—Ç—å",
  },
  "progress.continueJourneyDesc": {
    en: "Keep exploring to unlock more achievements and get closer to finding your perfect major.",
    ru: "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –∏–¥–µ–∞–ª—å–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.",
  },
  "progress.exploreMoreMajors": {
    en: "Explore More Majors",
    ru: "–ò–∑—É—á–∏—Ç—å –±–æ–ª—å—à–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π",
  },
  "progress.takeAssessment": { en: "Take Assessment", ru: "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç" },
  "progress.shareProgress": {
    en: "Share Your Progress",
    ru: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º",
  },
  "progress.myPathlyProgress": {
    en: "My Pathly Progress",
    ru: "–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ Pathly",
  },
  "progress.progressCopied": {
    en: "Progress copied to clipboard!",
    ru: "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!",
  },
  "progress.shareProgressButton": {
    en: "Share Progress",
    ru: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º",
  },
  "progress.inspireOthers": {
    en: "Inspire others with your learning journey!",
    ru: "–í–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ –¥—Ä—É–≥–∏—Ö —Å–≤–æ–∏–º —É—á–µ–±–Ω—ã–º –ø—É—Ç–µ–º!",
  },
  "progress.personalGoals": { en: "Personal Goals", ru: "–õ–∏—á–Ω—ã–µ —Ü–µ–ª–∏" },
  "progress.addGoal": { en: "Add Goal", ru: "–î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å" },
  "progress.progress": { en: "Progress", ru: "–ü—Ä–æ–≥—Ä–µ—Å—Å" },
  "progress.unit.majors": { en: "majors", ru: "—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π" },
  "progress.unit.assessments": { en: "assessments", ru: "—Ç–µ—Å—Ç–æ–≤" },
  "progress.unit.roadmaps": { en: "roadmaps", ru: "–¥–æ—Ä–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç" },
  "progress.unit.tasks": { en: "tasks", ru: "–∑–∞–¥–∞—á" },
  "progress.updateProgress": { en: "Update Progress", ru: "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å" },
  "progress.earned": { en: "Earned {date}", ru: "–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ {date}" },
  "progress.welcomeChallenge": { en: "7-Day Welcome Challenge", ru: "7-–¥–Ω–µ–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" },
  "progress.challengeCompletedToday": { en: "Completed today! ‚ú®", ru: "–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è! ‚ú®" },
  "Suggest Goal": { en: "Suggest Goal", ru: "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ü–µ–ª—å" },
  "No New Goals": { en: "No New Goals", ru: "–ù–µ—Ç –Ω–æ–≤—ã—Ö —Ü–µ–ª–µ–π" },
  "Create Goal": { en: "Create Goal", ru: "–°–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å" },
  "Goal Title": { en: "Goal Title", ru: "–ù–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏" },
  "Goal Description": { en: "Create a custom goal to track your progress", ru: "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ü–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞" },
  "Goal Title Placeholder": { en: "e.g., Learn React basics", ru: "–Ω–∞–ø—Ä–∏–º–µ—Ä, –ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã React" },
  "Goal Target": { en: "Target", ru: "–¶–µ–ª—å" },
  "Goal Unit": { en: "Unit", ru: "–ï–¥–∏–Ω–∏—Ü–∞" },
  "Goal Unit Placeholder": { en: "e.g., courses, hours", ru: "–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—É—Ä—Å—ã, —á–∞—Å—ã" },
  "Cancel": { en: "Cancel", ru: "–û—Ç–º–µ–Ω–∞" },
  "Add Goal": { en: "Add Goal", ru: "–î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å" },
  "Achievement earned": { en: "Earned on {date}", ru: "–ü–æ–ª—É—á–µ–Ω–æ {date}" },
  "progress.learningAnalytics": {
    en: "Learning Analytics",
    ru: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è",
  },
  "progress.learningPatterns": {
    en: "Learning Patterns",
    ru: "–®–∞–±–ª–æ–Ω—ã –æ–±—É—á–µ–Ω–∏—è",
  },
  "progress.mostActiveDay": {
    en: "Most Active Day",
    ru: "–°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å",
  },
  "progress.peakHour": { en: "Peak Hour", ru: "–ü–∏–∫–æ–≤—ã–π —á–∞—Å" },
  "progress.favoriteCategory": {
    en: "Favorite Category",
    ru: "–õ—é–±–∏–º–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è",
  },
  "progress.progressTrends": {
    en: "Progress Trends",
    ru: "–¢–µ–Ω–¥–µ–Ω—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞",
  },
  "progress.improvementRate": { en: "Improvement Rate", ru: "–¢–µ–º–ø —É–ª—É—á—à–µ–Ω–∏—è" },
  "progress.averageSession": { en: "Average Session", ru: "–°—Ä–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è" },
  "progress.min": { en: "min", ru: "–º–∏–Ω" },
  "progress.totalTime": { en: "Total Time", ru: "–û–±—â–µ–µ –≤—Ä–µ–º—è" },
  "progress.hours": { en: "hours", ru: "—á–∞—Å–æ–≤" },
  "progress.weeklyLearningReport": {
    en: "Weekly Learning Report",
    ru: "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± –æ–±—É—á–µ–Ω–∏–∏",
  },
  "progress.export": { en: "Export", ru: "–≠–∫—Å–ø–æ—Ä—Ç" },
  "progress.weeklyReportsComingSoon": {
    en: "Weekly reports coming soon!",
    ru: "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è!",
  },
  "progress.weeklyReportsDesc": {
    en: "Track your learning patterns and get personalized insights.",
    ru: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ —à–∞–±–ª–æ–Ω—ã –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–¥–µ–∏.",
  },
  "progress.todaysLearningTip": {
    en: "Today's Learning Tip",
    ru: "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å–æ–≤–µ—Ç –ø–æ –æ–±—É—á–µ–Ω–∏—é",
  },
  "progress.amazingStreak": {
    en: "üî• Amazing! You're on a {streak}-day streak! Keep the momentum going by exploring something new today.",
    ru: "üî• –û—Ç–ª–∏—á–Ω–æ! –í—ã –Ω–∞ —Å–µ—Ä–∏–∏ –∏–∑ {streak} –¥–Ω–µ–π! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ, –∏–∑—É—á–∞—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ —Å–µ–≥–æ–¥–Ω—è.",
  },
  "progress.startLearningJourney": {
    en: "üí° Start your learning journey today! Even 15 minutes of exploration can lead to amazing discoveries.",
    ru: "üí° –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –æ–±—É—á–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è! –î–∞–∂–µ 15 –º–∏–Ω—É—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º.",
  },
  "progress.yourCurrentStreak": {
    en: "Your current streak",
    ru: "–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è",
  },
  "progress.days": { en: "days", ru: "–¥–Ω–µ–π" },
  "progress.startMyStreak": { en: "Start My Streak", ru: "–ù–∞—á–∞—Ç—å –º–æ—é —Å–µ—Ä–∏—é" },
  "progress.noRecentActivity": {
    en: "No recent activity. Start exploring!",
    ru: "–ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ù–∞—á–Ω–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å!",
  },
};

type LanguageContextValue = {
  language: SupportedLanguage;
  setLanguage: (lang: SupportedLanguage) => void;
  t: (key: keyof typeof translations) => string;
};

const LanguageContext = createContext<LanguageContextValue | null>(null);

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [language, setLanguage] = useState<SupportedLanguage>("en");

  useEffect(() => {
    const saved =
      typeof window !== "undefined"
        ? (localStorage.getItem("lang") as SupportedLanguage | null)
        : null;
    if (saved === "en" || saved === "ru") {
      setLanguage(saved);
    }
  }, []);

  const handleSetLanguage = (lang: SupportedLanguage) => {
    setLanguage(lang);
    if (typeof window !== "undefined") {
      localStorage.setItem("lang", lang);
    }
  };

  const t = useMemo(() => {
    return (key: keyof typeof translations) =>
      translations[key]?.[language] ?? String(key);
  }, [language]);

  const value = useMemo(
    () => ({ language, setLanguage: handleSetLanguage, t }),
    [language, t],
  );

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
}

export function useLanguage() {
  const ctx = useContext(LanguageContext);
  if (!ctx) {
    throw new Error("useLanguage must be used within LanguageProvider");
  }
  return ctx;
}
